USE test_cs;

SET @@auto_increment_increment := 1;

drop table if exists test_sql_range_partitions_quarter_maxvalue;
CREATE TABLE test_sql_range_partitions_quarter_maxvalue (
    report_id INT NOT NULL,
    report_status VARCHAR(20) NOT NULL,
    report_updated TIMESTAMP NOT NULL 
)
PARTITION BY RANGE (UNIX_TIMESTAMP(report_updated)) (
    PARTITION p0 VALUES LESS THAN (UNIX_TIMESTAMP('2008-01-01 00:00:00')),
    PARTITION p1 VALUES LESS THAN (UNIX_TIMESTAMP('2008-04-01 00:00:00')),
    PARTITION p2 VALUES LESS THAN (UNIX_TIMESTAMP('2008-07-01 00:00:00')),
    PARTITION p3 VALUES LESS THAN (UNIX_TIMESTAMP('2008-10-01 00:00:00')),
    PARTITION p4 VALUES LESS THAN (UNIX_TIMESTAMP('2009-01-01 00:00:00')),
    PARTITION p5 VALUES LESS THAN (UNIX_TIMESTAMP('2009-04-01 00:00:00')),
    PARTITION p6 VALUES LESS THAN (MAXVALUE)
);


drop table if exists test_sql_range_partitions_quarter_no_maxvalue;
CREATE TABLE test_sql_range_partitions_quarter_no_maxvalue (
    report_id INT NOT NULL,
    report_status VARCHAR(20) NOT NULL,
    report_updated TIMESTAMP NOT NULL 
)
PARTITION BY RANGE (UNIX_TIMESTAMP(report_updated)) (
    PARTITION p0 VALUES LESS THAN (UNIX_TIMESTAMP('2008-01-01 00:00:00')),
    PARTITION p1 VALUES LESS THAN (UNIX_TIMESTAMP('2008-04-01 00:00:00')),
    PARTITION p2 VALUES LESS THAN (UNIX_TIMESTAMP('2008-07-01 00:00:00')),
    PARTITION p3 VALUES LESS THAN (UNIX_TIMESTAMP('2008-10-01 00:00:00')),
    PARTITION p4 VALUES LESS THAN (UNIX_TIMESTAMP('2009-01-01 00:00:00')),
    PARTITION p5 VALUES LESS THAN (UNIX_TIMESTAMP('2009-04-01 00:00:00'))
);



drop table if exists test_sql_range_partitions_minute_no_maxvalue;
CREATE TABLE test_sql_range_partitions_minute_no_maxvalue (
    report_id INT NOT NULL,
    report_status VARCHAR(20) NOT NULL,
    report_updated TIMESTAMP NOT NULL 
)
PARTITION BY RANGE (UNIX_TIMESTAMP(report_updated)) (
    PARTITION p0 VALUES LESS THAN (UNIX_TIMESTAMP('2008-01-01 00:00:00')),
    PARTITION p1 VALUES LESS THAN (UNIX_TIMESTAMP('2008-01-01 00:01:00')),
    PARTITION p2 VALUES LESS THAN (UNIX_TIMESTAMP('2008-01-01 00:02:00')),
    PARTITION p3 VALUES LESS THAN (UNIX_TIMESTAMP('2008-01-01 00:03:00')),
    PARTITION p4 VALUES LESS THAN (UNIX_TIMESTAMP('2008-01-01 00:04:00'))
);


drop table if exists test_sql_range_partitions_weekly;
CREATE TABLE test_sql_range_partitions_weekly (
  `id` int(11) DEFAULT NULL,
  `dt` datetime DEFAULT NULL
) ENGINE=MyISAM
PARTITION BY RANGE (to_days(dt))
(
 PARTITION p0 VALUES LESS THAN (to_days('2012-01-01 00:00:00')) ENGINE = MyISAM,
 PARTITION p1 VALUES LESS THAN (to_days('2012-01-08 00:00:00')) ENGINE = MyISAM,
 PARTITION p2 VALUES LESS THAN (to_days('2012-01-15 00:00:00')) ENGINE = MyISAM,
 PARTITION p3 VALUES LESS THAN (to_days('2012-01-22 00:00:00')) ENGINE = MyISAM,
 PARTITION p4 VALUES LESS THAN (to_days('2012-01-29 00:00:00')) ENGINE = MyISAM
) 
;

drop table if exists test_sql_range_partitions_int_interval;
CREATE TABLE test_sql_range_partitions_int_interval (
  `id` int(11) DEFAULT NULL,
  `val` int unsigned
) ENGINE=MyISAM
PARTITION BY RANGE (val)
(
 PARTITION p0 VALUES LESS THAN (2001) ENGINE = MyISAM,
 PARTITION p1 VALUES LESS THAN (2006) ENGINE = MyISAM,
 PARTITION p2 VALUES LESS THAN (2011) ENGINE = MyISAM,
 PARTITION p3 VALUES LESS THAN (2016) ENGINE = MyISAM,
 PARTITION p4 VALUES LESS THAN (2021) ENGINE = MyISAM
) 
;

drop table if exists test_sql_range_partitions_int_interval_with_zero;
CREATE TABLE test_sql_range_partitions_int_interval_with_zero (
  `id` int(11) DEFAULT NULL,
  `val` int unsigned
) ENGINE=MyISAM
PARTITION BY RANGE (val)
(
 PARTITION pz VALUES LESS THAN (0) ENGINE = MyISAM,
 PARTITION p0 VALUES LESS THAN (2001) ENGINE = MyISAM,
 PARTITION p1 VALUES LESS THAN (2006) ENGINE = MyISAM,
 PARTITION p2 VALUES LESS THAN (2011) ENGINE = MyISAM,
 PARTITION p3 VALUES LESS THAN (2016) ENGINE = MyISAM,
 PARTITION p4 VALUES LESS THAN (2021) ENGINE = MyISAM
) 
;
